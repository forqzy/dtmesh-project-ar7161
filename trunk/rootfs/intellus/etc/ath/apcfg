###################################################################################
##  apcfg
##
##  Configuration file for Atheros AP.
##  This file will "predefine" default configuration data for the AP.  This
##  will first read all configuration data from flash (cfg -e), then fill in any
##  defaults that are missing.  Thus the defaults will appear on the web pages
##  even if the configuration store has been cleared.
##
###################################################################################
##
## Get the current settings from flash/cache area
##

cfg -e > /tmp/vars.$$
. /tmp/vars.$$
rm /tmp/vars.$$

#aqi_modify
##################################################################################
cfg -a IS_11NMODE=${IS_11NMODE:="0"};
##################################################################################
##
## Set ntp client and time zone
##
##################################################################################

cfg -a NTP_HOSTNAME=${NTP_HOSTNAME:="pool.ntp.org"};
cfg -a NTPSync=${NTPSync:="2"};
cfg -a NTP_PORT=${NTP_PORT:="123"};
cfg -a TIMEZONE=${TIMEZONE:="CST_008"};

##
## Set httpd username/password/port
## 
###################################################################################
cfg -a HTTPD_USERNAME=${HTTPD_USERNAME:=admin}
cfg -a HTTPD_PASSWORD=${HTTPD_PASSWORD:="\$1\$\$CoERg7ynjYLsj2j4glJ34."}
cfg -a HTTPD_PORT=${HTTPD_PORT:=80}

##
## Set Temperature
## 
##################################################################################

cfg -a FAN_START_TEMP=${FAN_START_TEMP:="80000"}
cfg -a FAN_STOP_TEMP=${FAN_STOP_TEMP:="75000"}

##
## Set local hostname
##
##################################################################################

cfg -a LOCAL_HOSTNAME=${LOCAL_HOSTNAME:="__MODEL__"}

##
## Set GPIO
## GPIOX_DIR(0:input 1:output)
## GPIOX_LEVEL(0:Low 1:High)
##################################################################################

cfg -a GPIO2_DIR=${GPIO2_DIR:="1"}
cfg -a GPIO2_LEVEL=${GPIO2_LEVEL:="0"}
cfg -a GPIO7_DIR=${GPIO7_DIR:="1"}
cfg -a GPIO7_LEVEL=${GPIO7_LEVEL:="0"}
cfg -a GPIO8_DIR=${GPIO8_DIR:="0"}
cfg -a GPIO8_LEVEL=${GPIO8_LEVEL:="0"}

##
##
## DHCP server configuration
##
##

cfg -a DHCP_START=${DHCP_START:="100"}
cfg -a DHCP_END=${DHCP_END:="250"}
cfg -a DHCP_MAX_LEASETIME=${DHCP_MAX_LEASETIME:="86400"}
cfg -a DHCP_MAX_LEASES=${DHCP_MAX_LEASES:="150"}
cfg -a DHCP_ENABLE=${DHCP_ENABLE:="1"}

##
## Set Network configuration
##
## LAN_IPADDR  = IP address of the bridge
## WAN_IPADDR = Fixed IP address of the WAN, if it's not bridged
## NETWORK_MODE = Bridge/Router  
##                Bridge:bridge WAN(eth0) and LAN
##                Router:do not bridge WAN(eth0) to br0
## WAN_PROTO = Static/DHCP/PPPOE/3G
##             Static:Fix ip address of the WAN
##             DHCP:Run DHCP cient
##             PPPOE:point-to-point protocol over ethernet
##             3G:Dial with a GSM modem
##
###################################################################################

cfg -a NETWORK_MODE=${NETWORK_MODE:="Bridge"}
cfg -a LAN_IPADDR=${LAN_IPADDR:="192.168.1.2"}
cfg -a LAN_NETMASK=${LAN_NETMASK:="255.255.255.0"}
cfg -a WAN_PROTO=${WAN_PROTO:="DHCP"}
cfg -a WAN_IPADDR=${WAN_IPADDR:="192.168.2.1"}
cfg -a WAN_NETMASK=${WAN_NETMASK:="255.255.255.0"}

#
# Indicate if you want the WLAN to be activated on boot up.
#

cfg -a WLAN_ON_BOOT=${WLAN_ON_BOOT:="y"}

#
# AP Start Mode
# This can be overridded by environmental variables
# Modes can be
#    standard := standard single AP start mode
#      rootap := WDS root AP for WDS modes
#    reptater := WDS repeater station
#reptater-ind := WDS repeater station independent mode
#      client := WDS "virtual wire" client
#       multi := Multiple BSSID with all encryption types
#      stafwd := Station mode with address forwarding enabled
#
#

cfg -a AP_STARTMODE=${AP_STARTMODE:="standard"}
cfg -a AP_RADIO_ID=${AP_RADIO_ID:=0}
cfg -a AP_RADIO_ID_2=${AP_RADIO_ID_2:=1}
cfg -a AP_RADIO_ID_3=${AP_RADIO_ID_3:=0}
cfg -a AP_RADIO_ID_4=${AP_RADIO_ID_4:=0}
cfg -a Radio_1_Selection=${Radio_1_Selection:=0}
cfg -a Radio_2_Selection=${Radio_2_Selection:=0}


#################################################################################
## Default Parameters
## If these are not set explictly by exporting environmental variables, the following
## Defaults will be applied
#################################################################################
#
# AP_PRIMARY_CH could be
#                a number or
#                11na (which means auto-scan in 11na mode) or
#                11ng (which means auto-scan in 11ng mode)

cfg -a AP_PRIMARY_CH_FAN=${AP_PRIMARY_CH_FAN:=6}
cfg -a AP_CHMODE_FAN=${AP_CHMODE_FAN:="11NGHT20"}
cfg -a AP_PRIMARY_CH_FAN_2=${AP_PRIMARY_CH_FAN_2:=6}
cfg -a AP_CHMODE_FAN_2=${AP_CHMODE_FAN_2:="11NGHT20"}

##
## Set up the channel for dual mode
##

cfg -a AP_PRIMARY_CH_2_FAN=${AP_PRIMARY_CH_2_FAN:=40}
cfg -a AP_CHMODE_2_FAN=${AP_CHMODE_2_FAN:="11NAHT40MINUS"}
cfg -a AP_PRIMARY_CH_2_FAN_2=${AP_PRIMARY_CH_2_FAN_2:=40}
cfg -a AP_CHMODE_2_FAN_2=${AP_CHMODE_2_FAN_2:="11NAHT40MINUS"}

##
## This is for pure G or pure N operations.  Hmmmm...
##

cfg -a PUREG=${PUREG:=0}
if [ "${IS_11NMODE}" = "1" ]; then
	cfg -a PUREN=${PUREN:=1}
else
	cfg -a PUREN=${PUREN:=0}
fi

##
## Channel Configuration Section
##

cfg -a TXQUEUELEN=${TXQUEUELEN:=1000}
cfg -a SHORTGI=${SHORTGI:=1}
cfg -a SHORTGI_2=${SHORTGI_2:=1}

#
# Aggregation.  First parameter enables/disables,
# second parameter sets the size limit
#

cfg -a AMPDUENABLE=${AMPDUENABLE:=1}
cfg -a AMPDUENABLE_2=${AMPDUENABLE_2:=1}
cfg -a AMPDUFRAMES=${AMPDUFRAMES:=32}
cfg -a AMPDUFRAMES_2=${AMPDUFRAMES_2:=32}
cfg -a AMPDULIMIT=${AMPDULIMIT:=50000}
cfg -a AMPDULIMIT_2=${AMPDULIMIT_2:=50000}
cfg -a AMPDUMIN=${AMPDUMIN:=32768}
cfg -a AMPDUMIN_2=${AMPDUMIN_2:=32768}
cfg -a CWMMODE=${CWMMODE:=1}
cfg -a CWMMODE_2=${CWMMODE_2:=1}

if [ "${IS_11NMODE}" = "1" ]; then
	cfg -a RATECTL=${RATECTL:="man"}
else
	cfg -a RATECTL=${RATECTL:="auto"}
fi

#cfg -a MANRATE=${MANRATE:=0x8f8f8c8c}
#cfg -a MANRATE=${MANRATE:=0x86868686}
cfg -a MANRATE=${MANRATE:=0x8c8c8c8c}
cfg -a MANRETRIES=${MANRETRIES:=0x04040404}
cfg -a RX_CHAINMASK=${RX_CHAINMASK:=0}
cfg -a RX_CHAINMASK_2=${RX_CHAINMASK_2:=0}
cfg -a TX_CHAINMASK=${TX_CHAINMASK:=0}
cfg -a TX_CHAINMASK_2=${TX_CHAINMASK_2:=0}

## bridge client workaround for non-WDS APs (DLINK DIR300)
##
cfg -a BR_SNAT_MODE=${BR_SNAT_MODE:=0}

##
## AP Identification Section
##

cfg -a AP_SSID="${AP_SSID:=Atheros_XSpan_2G}"

if [ "${AP_STARTMODE}" = "dual" ]; then
    cfg -a AP_SSID_2="${AP_SSID_2:=Atheros_XSpan_5G}"
fi

##
## Set the default modes for multi configuration
## Set default security modes
## Set default secfile to PSK, only valid in WPA mode
## Default keys are Decimal (NOT hex)
##
export MAX_VAPS_PER_RADIO=4

##
## For the 4 wep keys, set the default values.  Note that the first key uses the _1
## trailer - it's not a VAP number, it's the number of the key.  This is done for
## both radios.
##

my_wep_keys="_1 _2 _3 _4"
for i in $my_wep_keys;
do
    if [ "${i}" = "''" ]; then
        i=""
    fi
    ITER_AP_WEP_RADIO_NUM0_KEY="WEP_RADIO_NUM0_KEY$i"
    ITER_AP_WEP_RADIO_NUM1_KEY="WEP_RADIO_NUM1_KEY$i"
    eval ITER_WEP_RADIO_NUM0_KEY=\$$ITER_AP_WEP_RADIO_NUM0_KEY
    eval ITER_WEP_RADIO_NUM1_KEY=\$$ITER_AP_WEP_RADIO_NUM1_KEY
    cfg -a $ITER_AP_WEP_RADIO_NUM0_KEY=${ITER_WEP_RADIO_NUM0_KEY:=""}
    cfg -a $ITER_AP_WEP_RADIO_NUM1_KEY=${ITER_WEP_RADIO_NUM1_KEY:=""}
done

##
## Now, for each radio, set the primary key and the mode value
##

cfg -a AP_PRIMARY_KEY_0="${AP_PRIMARY_KEY_0:=1}"
cfg -a AP_PRIMARY_KEY_1="${AP_PRIMARY_KEY_1:=1}"
cfg -a AP_WEP_MODE_0="${AP_WEP_MODE_0:=1}"
cfg -a AP_WEP_MODE_1="${AP_WEP_MODE_1:=1}"


my_vaps="'' _2 _3 _4 _5 _6 _7 _8"
for i in $my_vaps;
do
    if [ "${i}" = "''" ]; then
        i=""
    fi
    ITER_AP_MODE="AP_MODE$i"
    ITER_AP_SECMODE="AP_SECMODE$i"
    ITER_AP_SECFILE="AP_SECFILE$i"
    ITER_AP_WPS_ENABLE="WPS_ENABLE$i"
    eval ITER_MODE=\$$ITER_AP_MODE
    eval ITER_SECMODE=\$$ITER_AP_SECMODE
    eval ITER_SECFILE=\$$ITER_AP_SECFILE
    eval ITER_WPS_ENABLE=\$$ITER_AP_WPS_ENABLE
    cfg -a $ITER_AP_MODE=${ITER_MODE:="ap"}
    cfg -a $ITER_AP_SECMODE=${ITER_SECMODE:="None"}
    cfg -a $ITER_AP_SECFILE=${ITER_SECFILE:="PSK"}
    cfg -a $ITER_AP_WPS_ENABLE=${ITER_WPS_ENABLE:="0"}
done

##
## Export the variables again to catch the defaults
##

cfg -e > /tmp/vars.$$
. /tmp/vars.$$
rm /tmp/vars.$$

##
## Set the proper radio parameter values depending on the
## interface selected.  These are exported vice included
## in cache. These should really be in apup vice here,
## but this works OK.
##

for i in $my_vaps;
do
    if [ "${i}" = "''" ]; then
        i=""
fi
    ITER_RADIO_ID="AP_RADIO_ID$i"
    ITER_RFPARAM="AP_RFPARAM$i"
    eval ITER_RADIO_ID=\$$ITER_RADIO_ID
    if [ "${ITER_RADIO_ID}" = "1" ]; then
        export $ITER_RFPARAM=RF:$AP_PRIMARY_CH_2:$AP_CHMODE_2
else
        export $ITER_RFPARAM=RF:$AP_PRIMARY_CH:$AP_CHMODE
fi
done

#####################################################################################
## The following parameters are board specific, and should not be modified
#####################################################################################

export ATH_use_eeprom=1

